name: Deploy API to Cloudflare Workers

on:
  push:
    branches:
      - main
    paths:
      - 'apps/api/**'
      - 'packages/**'
      - 'sources/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'apps/api/**'
      - 'packages/**'
      - 'sources/**'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9.0.0'

jobs:
  # Lint and type check
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Lint code
        run: pnpm lint

      - name: 🎯 Type check
        run: pnpm check-types

  # Test the sources
  test:
    name: Test Sources
    runs-on: ubuntu-latest
    needs: quality
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        source: [mangadex, weebcentral]
    steps:
      - name: 🏗 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Test ${{ matrix.source }} source
        run: |
          echo "Testing ${{ matrix.source }} source"
          # pnpm test --filter=@source/${{ matrix.source }}

  # Deploy to production (on push to main)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://api.alethia.moe
    steps:
      - name: 🏗 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔨 Build packages
        run: pnpm build --filter='./packages/*'

      - name: 📊 Bundle Size Check
        run: |
          cd apps/api
          pnpm exec wrangler deploy --dry-run --outdir dist
          size=$(du -sh dist | cut -f1)
          echo "📦 Bundle size: $size"

      - name: 🚀 Deploy to Cloudflare Workers (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: 'apps/api'
          command: deploy --minify

      - name: 🧪 Smoke Test Production
        run: |
          sleep 10

          echo "Testing api.alethia.moe..."
          response=$(curl -s -o /dev/null -w "%{http_code}" https://api.alethia.moe/)
          if [ $response -eq 200 ]; then
            echo "✅ Production deployment successful!"
          else
            echo "❌ Production deployment failed with HTTP $response"
            exit 1
          fi

      - name: 🏷️ Create Release Tag
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            const sha = context.sha.substring(0, 7);
            const tagName = `deploy-${date}-${sha}`;

            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tagName}`,
              sha: context.sha
            });

            console.log(`Created tag: ${tagName}`);

      - name: 📢 Notify Deployment
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const { data: commit } = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });

            const message = `
            🚀 **Production Deployed Successfully!**

            **URLs:**
            - 🌐 Main: https://api.alethia.moe
            - 🔗 Workers: https://api.alethia.workers.dev

            **Details:**
            - 📝 Commit: \`${context.sha.substring(0, 7)}\`
            - 👤 Author: ${commit.commit
